// source: eventpayload.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var model_pb = require('./model_pb.js');
goog.object.extend(proto, model_pb);
goog.exportSymbol('proto.compservice.model.protobuf.BracketsGeneratedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CategoryAddedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitionCreatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitionInfoPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitorAddedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitorAssignmentDescriptor', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitorRemovedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitorUpdatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.FightCompetitorsAssignedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.FightEditorChangesAppliedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.FightOrderUpdate', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.FightStartTimeUpdatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.FightsAddedToStagePayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.MatsUpdatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.ScheduleGeneratedPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.StageResultSetPayload', null, global);
goog.exportSymbol('proto.compservice.model.protobuf.StageStatusUpdatedPayload', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.BracketsGeneratedPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.BracketsGeneratedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.BracketsGeneratedPayload.displayName = 'proto.compservice.model.protobuf.BracketsGeneratedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CategoryAddedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CategoryAddedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CategoryAddedPayload.displayName = 'proto.compservice.model.protobuf.CategoryAddedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitionCreatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitionCreatedPayload.displayName = 'proto.compservice.model.protobuf.CompetitionCreatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitionInfoPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitionInfoPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitionInfoPayload.displayName = 'proto.compservice.model.protobuf.CompetitionInfoPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.displayName = 'proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.displayName = 'proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitorAddedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitorAddedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitorAddedPayload.displayName = 'proto.compservice.model.protobuf.CompetitorAddedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitorAssignmentDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.displayName = 'proto.compservice.model.protobuf.CompetitorAssignmentDescriptor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.CompetitorRemovedPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitorRemovedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitorRemovedPayload.displayName = 'proto.compservice.model.protobuf.CompetitorRemovedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.displayName = 'proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.CompetitorUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.CompetitorUpdatedPayload.displayName = 'proto.compservice.model.protobuf.CompetitorUpdatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.FightCompetitorsAssignedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.displayName = 'proto.compservice.model.protobuf.FightCompetitorsAssignedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.FightEditorChangesAppliedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.displayName = 'proto.compservice.model.protobuf.FightEditorChangesAppliedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.FightOrderUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.FightOrderUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.FightOrderUpdate.displayName = 'proto.compservice.model.protobuf.FightOrderUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.FightsAddedToStagePayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.FightsAddedToStagePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.FightsAddedToStagePayload.displayName = 'proto.compservice.model.protobuf.FightsAddedToStagePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.FightStartTimeUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.displayName = 'proto.compservice.model.protobuf.FightStartTimeUpdatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.MatsUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.MatsUpdatedPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.MatsUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.MatsUpdatedPayload.displayName = 'proto.compservice.model.protobuf.MatsUpdatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.displayName = 'proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.ScheduleGeneratedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.ScheduleGeneratedPayload.displayName = 'proto.compservice.model.protobuf.ScheduleGeneratedPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.StageResultSetPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.compservice.model.protobuf.StageResultSetPayload.repeatedFields_, null);
};
goog.inherits(proto.compservice.model.protobuf.StageResultSetPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.StageResultSetPayload.displayName = 'proto.compservice.model.protobuf.StageResultSetPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.compservice.model.protobuf.StageStatusUpdatedPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.compservice.model.protobuf.StageStatusUpdatedPayload.displayName = 'proto.compservice.model.protobuf.StageStatusUpdatedPayload';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.BracketsGeneratedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.BracketsGeneratedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    stagesList: jspb.Message.toObjectList(msg.getStagesList(),
    model_pb.StageDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.BracketsGeneratedPayload}
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.BracketsGeneratedPayload;
  return proto.compservice.model.protobuf.BracketsGeneratedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.BracketsGeneratedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.BracketsGeneratedPayload}
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.StageDescriptor;
      reader.readMessage(value,model_pb.StageDescriptor.deserializeBinaryFromReader);
      msg.addStages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.BracketsGeneratedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.BracketsGeneratedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      model_pb.StageDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StageDescriptor stages = 1;
 * @return {!Array<!proto.compservice.model.protobuf.StageDescriptor>}
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.prototype.getStagesList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.StageDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.StageDescriptor, 1));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.StageDescriptor>} value
 * @return {!proto.compservice.model.protobuf.BracketsGeneratedPayload} returns this
*/
proto.compservice.model.protobuf.BracketsGeneratedPayload.prototype.setStagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.compservice.model.protobuf.StageDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.StageDescriptor}
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.prototype.addStages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.compservice.model.protobuf.StageDescriptor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.BracketsGeneratedPayload} returns this
 */
proto.compservice.model.protobuf.BracketsGeneratedPayload.prototype.clearStagesList = function() {
  return this.setStagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CategoryAddedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CategoryAddedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CategoryAddedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CategoryAddedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorystate: (f = msg.getCategorystate()) && model_pb.CategoryDescriptor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CategoryAddedPayload}
 */
proto.compservice.model.protobuf.CategoryAddedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CategoryAddedPayload;
  return proto.compservice.model.protobuf.CategoryAddedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CategoryAddedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CategoryAddedPayload}
 */
proto.compservice.model.protobuf.CategoryAddedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.CategoryDescriptor;
      reader.readMessage(value,model_pb.CategoryDescriptor.deserializeBinaryFromReader);
      msg.setCategorystate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CategoryAddedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CategoryAddedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CategoryAddedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CategoryAddedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorystate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.CategoryDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * optional CategoryDescriptor categoryState = 1;
 * @return {?proto.compservice.model.protobuf.CategoryDescriptor}
 */
proto.compservice.model.protobuf.CategoryAddedPayload.prototype.getCategorystate = function() {
  return /** @type{?proto.compservice.model.protobuf.CategoryDescriptor} */ (
    jspb.Message.getWrapperField(this, model_pb.CategoryDescriptor, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.CategoryDescriptor|undefined} value
 * @return {!proto.compservice.model.protobuf.CategoryAddedPayload} returns this
*/
proto.compservice.model.protobuf.CategoryAddedPayload.prototype.setCategorystate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.CategoryAddedPayload} returns this
 */
proto.compservice.model.protobuf.CategoryAddedPayload.prototype.clearCategorystate = function() {
  return this.setCategorystate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.CategoryAddedPayload.prototype.hasCategorystate = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitionCreatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitionCreatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    properties: (f = msg.getProperties()) && model_pb.CompetitionProperties.toObject(includeInstance, f),
    reginfo: (f = msg.getReginfo()) && model_pb.RegistrationInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitionCreatedPayload}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitionCreatedPayload;
  return proto.compservice.model.protobuf.CompetitionCreatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitionCreatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitionCreatedPayload}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.CompetitionProperties;
      reader.readMessage(value,model_pb.CompetitionProperties.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    case 2:
      var value = new model_pb.RegistrationInfo;
      reader.readMessage(value,model_pb.RegistrationInfo.deserializeBinaryFromReader);
      msg.setReginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitionCreatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitionCreatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.CompetitionProperties.serializeBinaryToWriter
    );
  }
  f = message.getReginfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      model_pb.RegistrationInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CompetitionProperties properties = 1;
 * @return {?proto.compservice.model.protobuf.CompetitionProperties}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.getProperties = function() {
  return /** @type{?proto.compservice.model.protobuf.CompetitionProperties} */ (
    jspb.Message.getWrapperField(this, model_pb.CompetitionProperties, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.CompetitionProperties|undefined} value
 * @return {!proto.compservice.model.protobuf.CompetitionCreatedPayload} returns this
*/
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.CompetitionCreatedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RegistrationInfo reginfo = 2;
 * @return {?proto.compservice.model.protobuf.RegistrationInfo}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.getReginfo = function() {
  return /** @type{?proto.compservice.model.protobuf.RegistrationInfo} */ (
    jspb.Message.getWrapperField(this, model_pb.RegistrationInfo, 2));
};


/**
 * @param {?proto.compservice.model.protobuf.RegistrationInfo|undefined} value
 * @return {!proto.compservice.model.protobuf.CompetitionCreatedPayload} returns this
*/
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.setReginfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.CompetitionCreatedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.clearReginfo = function() {
  return this.setReginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.CompetitionCreatedPayload.prototype.hasReginfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitionInfoPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitionInfoPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    memberid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitionInfoPayload}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitionInfoPayload;
  return proto.compservice.model.protobuf.CompetitionInfoPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitionInfoPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitionInfoPayload}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompetitionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemberid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitionInfoPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitionInfoPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMemberid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string competitionId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.getCompetitionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitionInfoPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.setCompetitionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string memberId = 2;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.getMemberid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitionInfoPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.setMemberid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitionInfoPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 port = 4;
 * @return {number}
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.compservice.model.protobuf.CompetitionInfoPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionInfoPayload.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    properties: (f = msg.getProperties()) && model_pb.CompetitionProperties.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload}
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload;
  return proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload}
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.CompetitionProperties;
      reader.readMessage(value,model_pb.CompetitionProperties.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.CompetitionProperties.serializeBinaryToWriter
    );
  }
};


/**
 * optional CompetitionProperties properties = 1;
 * @return {?proto.compservice.model.protobuf.CompetitionProperties}
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.prototype.getProperties = function() {
  return /** @type{?proto.compservice.model.protobuf.CompetitionProperties} */ (
    jspb.Message.getWrapperField(this, model_pb.CompetitionProperties, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.CompetitionProperties|undefined} value
 * @return {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload} returns this
*/
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.CompetitionPropertiesUpdatedPayload.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload}
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload;
  return proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload}
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.compservice.model.protobuf.CompetitionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional CompetitionStatus status = 1;
 * @return {!proto.compservice.model.protobuf.CompetitionStatus}
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.prototype.getStatus = function() {
  return /** @type {!proto.compservice.model.protobuf.CompetitionStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.compservice.model.protobuf.CompetitionStatus} value
 * @return {!proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitionStatusUpdatedPayload.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitorAddedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitorAddedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitor: (f = msg.getCompetitor()) && model_pb.Competitor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitorAddedPayload}
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitorAddedPayload;
  return proto.compservice.model.protobuf.CompetitorAddedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitorAddedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitorAddedPayload}
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.Competitor;
      reader.readMessage(value,model_pb.Competitor.deserializeBinaryFromReader);
      msg.setCompetitor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitorAddedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitorAddedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.Competitor.serializeBinaryToWriter
    );
  }
};


/**
 * optional Competitor competitor = 1;
 * @return {?proto.compservice.model.protobuf.Competitor}
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.prototype.getCompetitor = function() {
  return /** @type{?proto.compservice.model.protobuf.Competitor} */ (
    jspb.Message.getWrapperField(this, model_pb.Competitor, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.Competitor|undefined} value
 * @return {!proto.compservice.model.protobuf.CompetitorAddedPayload} returns this
*/
proto.compservice.model.protobuf.CompetitorAddedPayload.prototype.setCompetitor = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.CompetitorAddedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.prototype.clearCompetitor = function() {
  return this.setCompetitor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.CompetitorAddedPayload.prototype.hasCompetitor = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromfightid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tofightid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    competitorid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    referencetype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitorAssignmentDescriptor;
  return proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromfightid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTofightid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompetitorid(value);
      break;
    case 4:
      var value = /** @type {!proto.compservice.model.protobuf.FightReferenceType} */ (reader.readEnum());
      msg.setReferencetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromfightid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTofightid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompetitorid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReferencetype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string fromFightId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.getFromfightid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} returns this
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.setFromfightid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string toFightId = 2;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.getTofightid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} returns this
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.setTofightid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string competitorId = 3;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.getCompetitorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} returns this
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.setCompetitorid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional FightReferenceType referenceType = 4;
 * @return {!proto.compservice.model.protobuf.FightReferenceType}
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.getReferencetype = function() {
  return /** @type {!proto.compservice.model.protobuf.FightReferenceType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.compservice.model.protobuf.FightReferenceType} value
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor} returns this
 */
proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.prototype.setReferencetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitorRemovedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitorRemovedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    fighterid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitorRemovedPayload}
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitorRemovedPayload;
  return proto.compservice.model.protobuf.CompetitorRemovedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitorRemovedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitorRemovedPayload}
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFighterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitorRemovedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitorRemovedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFighterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string fighterId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.getFighterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitorRemovedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.setFighterid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string categories = 2;
 * @return {!Array<string>}
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.getCategoriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.compservice.model.protobuf.CompetitorRemovedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.setCategoriesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.CompetitorRemovedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.addCategories = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.CompetitorRemovedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitorRemovedPayload.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    stageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    propagationsList: jspb.Message.toObjectList(msg.getPropagationsList(),
    proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload;
  return proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageid(value);
      break;
    case 2:
      var value = new proto.compservice.model.protobuf.CompetitorAssignmentDescriptor;
      reader.readMessage(value,proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.deserializeBinaryFromReader);
      msg.addPropagations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPropagationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stageId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.getStageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload} returns this
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.setStageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CompetitorAssignmentDescriptor propagations = 2;
 * @return {!Array<!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor>}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.getPropagationsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.compservice.model.protobuf.CompetitorAssignmentDescriptor, 2));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor>} value
 * @return {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload} returns this
*/
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.setPropagationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor}
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.addPropagations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.compservice.model.protobuf.CompetitorAssignmentDescriptor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload} returns this
 */
proto.compservice.model.protobuf.CompetitorsPropagatedToStagePayload.prototype.clearPropagationsList = function() {
  return this.setPropagationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.CompetitorUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.CompetitorUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitor: (f = msg.getCompetitor()) && model_pb.Competitor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.CompetitorUpdatedPayload}
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.CompetitorUpdatedPayload;
  return proto.compservice.model.protobuf.CompetitorUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.CompetitorUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.CompetitorUpdatedPayload}
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.Competitor;
      reader.readMessage(value,model_pb.Competitor.deserializeBinaryFromReader);
      msg.setCompetitor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.CompetitorUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.CompetitorUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.Competitor.serializeBinaryToWriter
    );
  }
};


/**
 * optional Competitor competitor = 1;
 * @return {?proto.compservice.model.protobuf.Competitor}
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.prototype.getCompetitor = function() {
  return /** @type{?proto.compservice.model.protobuf.Competitor} */ (
    jspb.Message.getWrapperField(this, model_pb.Competitor, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.Competitor|undefined} value
 * @return {!proto.compservice.model.protobuf.CompetitorUpdatedPayload} returns this
*/
proto.compservice.model.protobuf.CompetitorUpdatedPayload.prototype.setCompetitor = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.CompetitorUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.prototype.clearCompetitor = function() {
  return this.setCompetitor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.CompetitorUpdatedPayload.prototype.hasCompetitor = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    assignmentsList: jspb.Message.toObjectList(msg.getAssignmentsList(),
    proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload}
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.FightCompetitorsAssignedPayload;
  return proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload}
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.compservice.model.protobuf.CompetitorAssignmentDescriptor;
      reader.readMessage(value,proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.deserializeBinaryFromReader);
      msg.addAssignments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssignmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.compservice.model.protobuf.CompetitorAssignmentDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CompetitorAssignmentDescriptor assignments = 1;
 * @return {!Array<!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor>}
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.prototype.getAssignmentsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.compservice.model.protobuf.CompetitorAssignmentDescriptor, 1));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor>} value
 * @return {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload} returns this
*/
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.prototype.setAssignmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.CompetitorAssignmentDescriptor}
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.prototype.addAssignments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.compservice.model.protobuf.CompetitorAssignmentDescriptor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.FightCompetitorsAssignedPayload} returns this
 */
proto.compservice.model.protobuf.FightCompetitorsAssignedPayload.prototype.clearAssignmentsList = function() {
  return this.setAssignmentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    model_pb.FightDescription.toObject, includeInstance),
    newfightsList: jspb.Message.toObjectList(msg.getNewfightsList(),
    model_pb.FightDescription.toObject, includeInstance),
    removedfighidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.FightEditorChangesAppliedPayload;
  return proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.FightDescription;
      reader.readMessage(value,model_pb.FightDescription.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    case 2:
      var value = new model_pb.FightDescription;
      reader.readMessage(value,model_pb.FightDescription.deserializeBinaryFromReader);
      msg.addNewfights(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRemovedfighids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      model_pb.FightDescription.serializeBinaryToWriter
    );
  }
  f = message.getNewfightsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      model_pb.FightDescription.serializeBinaryToWriter
    );
  }
  f = message.getRemovedfighidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * repeated FightDescription updates = 1;
 * @return {!Array<!proto.compservice.model.protobuf.FightDescription>}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.FightDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.FightDescription, 1));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.FightDescription>} value
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
*/
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.compservice.model.protobuf.FightDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.FightDescription}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.compservice.model.protobuf.FightDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};


/**
 * repeated FightDescription newFights = 2;
 * @return {!Array<!proto.compservice.model.protobuf.FightDescription>}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.getNewfightsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.FightDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.FightDescription, 2));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.FightDescription>} value
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
*/
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.setNewfightsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.compservice.model.protobuf.FightDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.FightDescription}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.addNewfights = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.compservice.model.protobuf.FightDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.clearNewfightsList = function() {
  return this.setNewfightsList([]);
};


/**
 * repeated string removedFighids = 3;
 * @return {!Array<string>}
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.getRemovedfighidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.setRemovedfighidsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.addRemovedfighids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.FightEditorChangesAppliedPayload} returns this
 */
proto.compservice.model.protobuf.FightEditorChangesAppliedPayload.prototype.clearRemovedfighidsList = function() {
  return this.setRemovedfighidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.FightOrderUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.FightOrderUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightOrderUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    fightid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberonmat: jspb.Message.getFieldWithDefault(msg, 2, 0),
    starttime: (f = msg.getStarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    matid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate}
 */
proto.compservice.model.protobuf.FightOrderUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.FightOrderUpdate;
  return proto.compservice.model.protobuf.FightOrderUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.FightOrderUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate}
 */
proto.compservice.model.protobuf.FightOrderUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFightid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberonmat(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStarttime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.FightOrderUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.FightOrderUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightOrderUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFightid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumberonmat();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStarttime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMatid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string fightId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.getFightid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate} returns this
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.setFightid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 numberOnMat = 2;
 * @return {number}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.getNumberonmat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate} returns this
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.setNumberonmat = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp startTime = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.getStarttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate} returns this
*/
proto.compservice.model.protobuf.FightOrderUpdate.prototype.setStarttime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate} returns this
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.clearStarttime = function() {
  return this.setStarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.hasStarttime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string matId = 4;
 * @return {string}
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.getMatid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.FightOrderUpdate} returns this
 */
proto.compservice.model.protobuf.FightOrderUpdate.prototype.setMatid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.FightsAddedToStagePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.FightsAddedToStagePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    fightsList: jspb.Message.toObjectList(msg.getFightsList(),
    model_pb.FightDescription.toObject, includeInstance),
    stageid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.FightsAddedToStagePayload}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.FightsAddedToStagePayload;
  return proto.compservice.model.protobuf.FightsAddedToStagePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.FightsAddedToStagePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.FightsAddedToStagePayload}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.FightDescription;
      reader.readMessage(value,model_pb.FightDescription.deserializeBinaryFromReader);
      msg.addFights(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.FightsAddedToStagePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.FightsAddedToStagePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFightsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      model_pb.FightDescription.serializeBinaryToWriter
    );
  }
  f = message.getStageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated FightDescription fights = 1;
 * @return {!Array<!proto.compservice.model.protobuf.FightDescription>}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.getFightsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.FightDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.FightDescription, 1));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.FightDescription>} value
 * @return {!proto.compservice.model.protobuf.FightsAddedToStagePayload} returns this
*/
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.setFightsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.compservice.model.protobuf.FightDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.FightDescription}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.addFights = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.compservice.model.protobuf.FightDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.FightsAddedToStagePayload} returns this
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.clearFightsList = function() {
  return this.setFightsList([]);
};


/**
 * optional string stageId = 2;
 * @return {string}
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.getStageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.FightsAddedToStagePayload} returns this
 */
proto.compservice.model.protobuf.FightsAddedToStagePayload.prototype.setStageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    newfightsList: jspb.Message.toObjectList(msg.getNewfightsList(),
    model_pb.FightStartTimePair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload}
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.FightStartTimeUpdatedPayload;
  return proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload}
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.FightStartTimePair;
      reader.readMessage(value,model_pb.FightStartTimePair.deserializeBinaryFromReader);
      msg.addNewfights(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewfightsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      model_pb.FightStartTimePair.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FightStartTimePair newFights = 1;
 * @return {!Array<!proto.compservice.model.protobuf.FightStartTimePair>}
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.prototype.getNewfightsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.FightStartTimePair>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.FightStartTimePair, 1));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.FightStartTimePair>} value
 * @return {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload} returns this
*/
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.prototype.setNewfightsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.compservice.model.protobuf.FightStartTimePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.FightStartTimePair}
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.prototype.addNewfights = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.compservice.model.protobuf.FightStartTimePair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.FightStartTimeUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.FightStartTimeUpdatedPayload.prototype.clearNewfightsList = function() {
  return this.setNewfightsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.MatsUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.MatsUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    matsList: jspb.Message.toObjectList(msg.getMatsList(),
    model_pb.MatDescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.MatsUpdatedPayload}
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.MatsUpdatedPayload;
  return proto.compservice.model.protobuf.MatsUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.MatsUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.MatsUpdatedPayload}
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.MatDescription;
      reader.readMessage(value,model_pb.MatDescription.deserializeBinaryFromReader);
      msg.addMats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.MatsUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.MatsUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      model_pb.MatDescription.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MatDescription mats = 1;
 * @return {!Array<!proto.compservice.model.protobuf.MatDescription>}
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.prototype.getMatsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.MatDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.MatDescription, 1));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.MatDescription>} value
 * @return {!proto.compservice.model.protobuf.MatsUpdatedPayload} returns this
*/
proto.compservice.model.protobuf.MatsUpdatedPayload.prototype.setMatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.compservice.model.protobuf.MatDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.MatDescription}
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.prototype.addMats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.compservice.model.protobuf.MatDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.MatsUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.MatsUpdatedPayload.prototype.clearMatsList = function() {
  return this.setMatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    registrationinfo: (f = msg.getRegistrationinfo()) && model_pb.RegistrationInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload}
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload;
  return proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload}
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.RegistrationInfo;
      reader.readMessage(value,model_pb.RegistrationInfo.deserializeBinaryFromReader);
      msg.setRegistrationinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegistrationinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.RegistrationInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional RegistrationInfo registrationInfo = 1;
 * @return {?proto.compservice.model.protobuf.RegistrationInfo}
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.prototype.getRegistrationinfo = function() {
  return /** @type{?proto.compservice.model.protobuf.RegistrationInfo} */ (
    jspb.Message.getWrapperField(this, model_pb.RegistrationInfo, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.RegistrationInfo|undefined} value
 * @return {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload} returns this
*/
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.prototype.setRegistrationinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.prototype.clearRegistrationinfo = function() {
  return this.setRegistrationinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.RegistrationInfoUpdatedPayload.prototype.hasRegistrationinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.ScheduleGeneratedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.ScheduleGeneratedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedule: (f = msg.getSchedule()) && model_pb.Schedule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.ScheduleGeneratedPayload}
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.ScheduleGeneratedPayload;
  return proto.compservice.model.protobuf.ScheduleGeneratedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.ScheduleGeneratedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.ScheduleGeneratedPayload}
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_pb.Schedule;
      reader.readMessage(value,model_pb.Schedule.deserializeBinaryFromReader);
      msg.setSchedule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.ScheduleGeneratedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.ScheduleGeneratedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_pb.Schedule.serializeBinaryToWriter
    );
  }
};


/**
 * optional Schedule schedule = 1;
 * @return {?proto.compservice.model.protobuf.Schedule}
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.prototype.getSchedule = function() {
  return /** @type{?proto.compservice.model.protobuf.Schedule} */ (
    jspb.Message.getWrapperField(this, model_pb.Schedule, 1));
};


/**
 * @param {?proto.compservice.model.protobuf.Schedule|undefined} value
 * @return {!proto.compservice.model.protobuf.ScheduleGeneratedPayload} returns this
*/
proto.compservice.model.protobuf.ScheduleGeneratedPayload.prototype.setSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.compservice.model.protobuf.ScheduleGeneratedPayload} returns this
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.prototype.clearSchedule = function() {
  return this.setSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.compservice.model.protobuf.ScheduleGeneratedPayload.prototype.hasSchedule = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.compservice.model.protobuf.StageResultSetPayload.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.StageResultSetPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.StageResultSetPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.StageResultSetPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    stageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    model_pb.CompetitorStageResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.StageResultSetPayload}
 */
proto.compservice.model.protobuf.StageResultSetPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.StageResultSetPayload;
  return proto.compservice.model.protobuf.StageResultSetPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.StageResultSetPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.StageResultSetPayload}
 */
proto.compservice.model.protobuf.StageResultSetPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageid(value);
      break;
    case 2:
      var value = new model_pb.CompetitorStageResult;
      reader.readMessage(value,model_pb.CompetitorStageResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.StageResultSetPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.StageResultSetPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.StageResultSetPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      model_pb.CompetitorStageResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stageId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.getStageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.StageResultSetPayload} returns this
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.setStageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CompetitorStageResult results = 2;
 * @return {!Array<!proto.compservice.model.protobuf.CompetitorStageResult>}
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.compservice.model.protobuf.CompetitorStageResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_pb.CompetitorStageResult, 2));
};


/**
 * @param {!Array<!proto.compservice.model.protobuf.CompetitorStageResult>} value
 * @return {!proto.compservice.model.protobuf.StageResultSetPayload} returns this
*/
proto.compservice.model.protobuf.StageResultSetPayload.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.compservice.model.protobuf.CompetitorStageResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.compservice.model.protobuf.CompetitorStageResult}
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.compservice.model.protobuf.CompetitorStageResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.compservice.model.protobuf.StageResultSetPayload} returns this
 */
proto.compservice.model.protobuf.StageResultSetPayload.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.compservice.model.protobuf.StageStatusUpdatedPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.compservice.model.protobuf.StageStatusUpdatedPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    stageid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.compservice.model.protobuf.StageStatusUpdatedPayload}
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.compservice.model.protobuf.StageStatusUpdatedPayload;
  return proto.compservice.model.protobuf.StageStatusUpdatedPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.compservice.model.protobuf.StageStatusUpdatedPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.compservice.model.protobuf.StageStatusUpdatedPayload}
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageid(value);
      break;
    case 2:
      var value = /** @type {!proto.compservice.model.protobuf.StageStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.compservice.model.protobuf.StageStatusUpdatedPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.compservice.model.protobuf.StageStatusUpdatedPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStageid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string stageId = 1;
 * @return {string}
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.prototype.getStageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.compservice.model.protobuf.StageStatusUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.prototype.setStageid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StageStatus status = 2;
 * @return {!proto.compservice.model.protobuf.StageStatus}
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.prototype.getStatus = function() {
  return /** @type {!proto.compservice.model.protobuf.StageStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.compservice.model.protobuf.StageStatus} value
 * @return {!proto.compservice.model.protobuf.StageStatusUpdatedPayload} returns this
 */
proto.compservice.model.protobuf.StageStatusUpdatedPayload.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


goog.object.extend(exports, proto.compservice.model.protobuf);
